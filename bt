AWSTemplateFormatVersion: '2010-09-09'
Description: Provision ECS Fargate type ECS Service for testing SpringBoot Blue/Green Deployment
Parameters:
  ApplicationShortName:
    Type: String
    Description: eCOS SpringBoot Blue/Green
  ClusterName:
    Type: String
  ServiceName:
    Type: String
  ContainerName:
    Type: String
    Description: Container Name
  ContainerImage:
    Type: String
    Description: Container Image
  ContainerPort:
    Type: Number
  DesiredCount:
    Type: String
    Description: Desired number of task
  Cpu:
    Type: Number
    Description: Cpu
  Memory:
    Type: Number
    Description: Memory
  Lifecycle:
    Type: String
  ServiceSecurityGroupName:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Description: SecurityGroup for the ENI
  EcsServiceSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
  TargetGroupArn:
    Type: String
  TaskRoleArn:
    Type: String
  AssetID:
    Type: String
  DesiredCount:
    Type: Number
  S3ConfigBucket:
    Type: String
  NginxContainerName:
    Type: String
  NginxContainerImage:
    Type: String
  NginxContainerPort:
    Type: Number
  NginxMemory:
    Type: Number
  VPC:
    Description: VPC of MF Account
    Type: AWS::EC2::VPC::Id
    
Resources:

  EcsService:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: !Ref ServiceName
      Cluster: !Ref ClusterName
      DesiredCount: !Ref DesiredCount
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups: !Ref ServiceSecurityGroupName
          Subnets: !Ref EcsServiceSubnets
      TaskDefinition: !Ref 'TaskDefinition'

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: !Ref Cpu
      Memory: !Ref Memory
      Family: !Ref ServiceName
      ExecutionRoleArn: !Ref TaskRoleArn
      TaskRoleArn: !Ref TaskRoleArn
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Essential: 'true'
          Image: !Ref ContainerImage
          Memory: !Ref Memory
          Environment :
           - Name: lifecycle
             Value: POC
           - Name: S3_CONFIG_ENABLED
             Value: false
           - Name: S3_CONFIG_BUCKET
             Value: !Ref S3ConfigBucket
          EntryPoint: 
           - "sh"
           - "-c"
           - "/export/webapps/springboot/fnma/sbruntimectl.sh -d aws -i aws-springboot -a start"
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub '/aws/ecs/${ClusterName}'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Ref ServiceName
              awslogs-create-group: true
        - Name: !Ref NginxContainerName
          Essential: 'true'
          Image: '825597222502.dkr.ecr.us-east-1.amazonaws.com/f4i/base:mwnginx2.0'
          Memory: !Ref NginxMemory
          EntryPoint:
           - "sh"
           - "-c"
           - "/etc/pki/tls/certs/entrypoint.sh"
          Environment:
            - Name: APP_NAME
              Value: !Ref ApplicationShortName
            - Name: APP_ENV
              Value: !Ref AwsLifeCycle
            - Name: APP_CLUSTER_NAME
              Value: !Ref ClusterName
            - Name: APP_REGION
              Value: !Ref AWS::Region
            - Name: S3_CERT_BUCKET
              Value: 'f4i-devl-csbu-us-east-1/provisioning/certs/ecs/f4i-ecs-ecos'
            - Name: S3_CERT_ENABLED
              Value: true 
          PortMappings:
            - ContainerPort: !Ref NginxContainerPort
              Protocol: tcp      
